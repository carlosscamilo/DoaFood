<!DOCTYPE html>
<html>
<head>
    <title><%=title%></title>
    <!-- Materialize CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css" rel="stylesheet">
    <!-- Materialize JavaScript -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
    <!-- jQuery (Materialize dependency) -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js"></script>
</head>
<body>
    <div class="container">
        <h1 class="center-align"><%=title%></h1>

        <form id="doacaoForm" class="col s12">
            <input required type="hidden" name="id" id="id">

            <div class="input-field">
                <label for="descricao">Descrição:</label>
                <input required id="descricao" name="descricao" type="text">
            </div>

            <div class="input-field">
                <label for="data">Data:</label>
                <input required id="data" name="data" type="text" class="datepicker">
            </div>

            <div class="input-field">
                <label for="doacao">Doação:</label>
                <input required id="doacao" name="doacao" type="number" step="0.01">
            </div>

            <div class="row">
                <button class="btn waves-effect waves-light" type="submit" name="action">Enviar
                    <i class="material-icons right">send</i>
                </button>
                <button class="btn waves-effect waves-light red" type="reset">Cancelar
                    <i class="material-icons right">clear</i>
                </button>
            </div>
        </form>

        <span id="error" class="red-text"></span>

        <% if (error) { %>
            <span class="red-text"><%=error%></span>
        <% } %>

        <table class="striped">
            <thead>
                <tr>
                    <th>Descrição</th>
                    <th>Data</th>
                    <th>Doação</th>
                    <th>Ações</th>
                </tr>
            </thead>
            <tbody>
                <% for (let doacao of doacoes) { %>
                    <tr>
                        <td><%=doacao.descricao%></td>
                        <td><%=new Date(doacao.data).toLocaleDateString()%></td>
                        <td><%=doacao.doacao%></td>
                        <td>
                            <button class="btn-small waves-effect waves-light" onclick="editDoacao('<%=doacao.id%>')">Editar</button>
                            <button class="btn-small waves-effect waves-light red" onclick="deleteDoacao('<%=doacao.id%>')">Deletar</button>
                        </td>
                    </tr>
                <% } %>
            </tbody>
        </table>
    </div>

    <script>
        const form = document.getElementById("doacaoForm");

        // Realiza as requisições de POST ou PUT
        form.addEventListener("submit", (e) => {
            e.preventDefault();
            const doacao = mountDataForm();
            let id = doacao.id;
            let METHOD = id ? 'PUT' : 'POST';
            let URL = id ? /doacao/${id} : '/doacao';
            createOrUpdate(doacao, URL, METHOD);
        });

        // Cria e atualiza a doação
        function createOrUpdate(doacao, URL, METHOD) {
            fetch(URL, {
                method: METHOD,
                headers: {"Content-Type": "application/json"},
                body: JSON.stringify(doacao)
            })
            .then(async (res) => await checkError(res))
            .then(() => {
                form.reset();
                window.location.reload();
            })
            .catch((error) => {
                document.getElementById('error').innerText = error;
            });
        }

        // Atualiza o formulário para poder editar
        function editDoacao(id) {
            fetch("/doacao/" + id, { method: "GET" })
            .then(async (res) => await checkError(res))
            .then((doacao) => {
                for (let prop in doacao) {
                    const input = document.querySelector(input[name="${prop}"]);
                    if (input) {
                        input.value = doacao[prop];
                    }
                }
            })
            .catch((error) => {
                document.getElementById('error').innerText = error;
            });
        }

        // Deleta a doação pelo ID
        function deleteDoacao(id) {
            fetch("/doacao/" + id, { method: "DELETE" })
            .then(async (res) => await checkError(res))
            .then(() => {
                window.location.reload();
            })
            .catch((error) => {
                document.getElementById('error').innerText = error;
            });
        }

        // Trata os erros
        async function checkError(res) {
            if (!res.ok) {
                const err = await res.json();
                throw err;
            }
            return res.json();
        }

        // Carrega os campos do formulário preenchidos
        function mountDataForm() {
            const formData = new FormData(form);
            const doacao = {};
            formData.forEach((v, k) => {
                doacao[k] = v;
            });
            return doacao;
        }

        // Inicializa o datepicker do Materialize
        document.addEventListener('DOMContentLoaded', function() {
            var elems = document.querySelectorAll('.datepicker');
            M.Datepicker.init(elems, {
                format: 'dd/mm/yyyy',
                i18n: {
                    months: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
                    weekdaysShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'],
                    weekdaysAbbrev: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S']
                }
            });
        });
    </script>
</body>
</html>